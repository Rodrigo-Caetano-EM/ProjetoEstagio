@using ProjetoDeEstagio2
@using ProjetoWeb.Models

@model Aluno


@{
    var lista = new[]
    {
        new Sexo {CategoriaId = 1, Nome = "Masculino"},
        new Sexo {CategoriaId = 2, Nome = "Feminino"},
    };
    var listaDeSexos = new SelectList(lista, "CategoriaId", "Nome", Model);
}


@using (Html.BeginForm()) 
{
    <head>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    </head>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Adicionar Aluno</h4>
        <div>
            @Html.ActionLink("Ir para a lista de alunos", "PesquisarAluno")
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="row">
                <table>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Matricula, new { htmlAttributes = new { @class = "form-control", @oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", @maxlength = "9", @autocomplete="off", @id="Matricula"}})
                            @Html.ValidationMessageFor(model => model.Matricula, "*", new { @class = "text-danger" })<br>
                        </th>
                        <th>
                            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @id="Nome" } })
                            @Html.ValidationMessageFor(model => model.Nome, "*", new { @class = "text-danger" })<br>
                        </th>
                    </tr>
                </table>
            </div>
        </div>
        <br>
        <div class="container">
            <div class="row">
                <table>
                    <tr>
                        <th>
                            <br>
                            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })<br>
                            @Html.DropDownListFor(model => model.Sexo, listaDeSexos, new { @class = "form-control", @id = "dropDownList",})
                            @Html.ValidationMessageFor(model => model.Sexo, "*", new { @class = "text-danger" })
                        </th>
                        <th>
                            <br>
                            @Html.LabelFor(model => model.Nascimento, htmlAttributes: new { @class = "control-label" })<br>
                            @Html.EditorFor(model => model.Nascimento, new { htmlAttributes = new { @class = "form-control", @id = "textBoxNascimento" }})
                            @Html.ValidationMessageFor(model => model.Nascimento, "*", new { @class = "text-danger"})
                        </th>
                        <th>
                            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })          
                            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", @maxlength = "15",  @autocomplete="off" } })
                            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger"})
                        </th>
                    </tr>
                </table>
            </div>
        </div>        
    </div> 
    <br/>
    <br/>
    <div class="container">        
        <div class = "row">
            <table>
                <tr>
                    <th>
                        <input type="submit" value="Salvar" class="btn btn-success" onclick="checaCamposVazios()"/>
                        <input type="button" class="btn btn-secondary" value="Limpar" onclick="location.href='@Url.Action("Create", "Aluno")'" />
                    </th>
                    <th style="text-align: right">
                        <input type="button" class="btn btn-secondary" value="Voltar" onclick="location.href='@Url.Action("Index", "Home")'" />
                    </th>
                </tr>
            </table>
        </div>    
    </div>
}

<script type="text/javascript" language="javascript">

    function checaCamposVazios(){

        var teste = false;

        if(document.getElementById("Matricula").value.length == 0){
            teste = true;
        }               
        if(document.getElementById("Nome").value.length == 0){
            teste = true;
        }             
        if (teste){
            alert("Erro! Preencha todos os dados obrigatórios")
        }
    }
    
</script>