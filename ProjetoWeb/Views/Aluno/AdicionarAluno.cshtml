@using ProjetoDeEstagio2
@using ProjetoWeb.Models

@model Aluno

@{
    var lista = new[]
    {
        new Sexo {CategoriaId = 1, Nome = "Masculino"},
        new Sexo {CategoriaId = 2, Nome = "Feminino"},
    };
    var listaDeSexos = new SelectList(lista, "CategoriaId", "Nome", Model);
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Adicionar Aluno</h4>
        <div>
            @Html.ActionLink("Ir para a lista de alunos", "SelecionarAluno")
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="row">
                <div class="col-sm">
                    @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Matricula, new { htmlAttributes = new { @class = "form-control", @oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", @maxlength = "9"}})
                    @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-10" })
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-sm" })<br>
                    @Html.DropDownListFor(model => model.Sexo, listaDeSexos, new { @class = "btn-sm dropdown-toggle-split" })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm">
                    @Html.LabelFor(model => model.Nascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Nascimento, new { htmlAttributes = new { @class = "form-control" }})
                    @Html.ValidationMessageFor(model => model.Nascimento, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm">
                    @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })          
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>        
    </div>
    <br />
    <div class="container">        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success"/>
                <input type="button" class="btn btn-secondary" value="Voltar" onclick="location.href='@Url.Action("Index", "Home")'" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="color:green">
                @ViewBag.Message
            </div>
        </div>    
    </div>
}